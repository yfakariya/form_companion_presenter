name: form_companion_presenter

packages:
  - examples/**
  - packages/**
  - tool/**

scripts:
  analyze:
    run: melos run analyze:core --no-select
    description: Run `flutter analyze` in all packages.

  analyze:core:
    run: melos exec -c 1 -- fvm flutter analyze .
    description: Run `flutter analyze` in all packages.
    select-package:
      flutter: true
      scope: '*'
      ignore: dev_env

  pubget:
    run: melos run pubget:flutter --no-select && melos run pubget:dart --no-select
    description: Run `flutter pub get` in all packages.

  pubget:flutter:
    run: melos exec -c 1 -- fvm flutter pub get
    description: Run `flutter pub get` in all packages.
    select-package:
      flutter: true
      scope: '*'
      ignore: dev_env

  pubget:dart:
    run: melos exec -c 1 -- fvm dart pub get
    description: Run `dart pub get` in all packages.
    select-package:
      flutter: false
      scope: '*'
      ignore: dev_env

  test:
    run: melos run test:flutter --no-select && melos run test:dart --no-select && melos run test:grind --no-select
    description: Run Flutter tests for a specific package in this project.

  test:flutter:
    run: melos exec -c 1 --fail-fast -- fvm flutter test --reporter=expanded --coverage
    description: Run Flutter tests for a specific package in this project.
    select-package:
      flutter: true
      dir-exists: test
      ignore:
        - 'form_companion_generator_test_targets'

  test:grind:
    run: melos exec -c 1 --fail-fast -- grind 
    description: Run grind tests for a specific package in this project.
    select-package:
      flutter: true
      dir-exists: tool
      ignore:
        - 'form_companion_presenter_examples'

  test:dart:
    run: melos exec -c 1 --fail-fast -- fvm dart test --reporter=expanded --coverage=coverage
    description: Run Dart tests for a specific package in this project.
    select-package:
      flutter: false
      dir-exists: test

  build_runner:
    run: melos run build_runner:core --no-select
    description: Do source generation for freezed
  
  build_runner:core:
    run: melos exec -c 1 --fail-fast -- fvm flutter pub run build_runner build --delete-conflicting-outputs
    select-package:
      flutter: true
      depends-on:
        - build_runner

  easy_localization:
    run: melos run easy_localization:json --no-select && melos run easy_localization:keys --no-select
    description: Do source generation for easy_localization.

  easy_localization:json:
    run: melos exec -c 1 --fail-fast -- fvm flutter pub run easy_localization:generate -O lib/l10n -f json
    select-package:
      flutter: true
      dir-exists: resources/langs
      depends-on: easy_localization

  easy_localization:keys:
    run: melos exec -c 1 --fail-fast -- fvm flutter pub run easy_localization:generate -O lib/l10n -f keys -o locale_keys.g.dart
    select-package:
      flutter: true
      dir-exists: resources/langs
      depends-on: easy_localization
